{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["App","props","_this","_Component","call","this","state","quote","author","quoteImage","activeFont","borderColor","opacity","textColor","ownQuote","ownQuoteChecked","selfAuthored","ownImage","imageURLIncorrect","colorChange","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default","opacityChange","textColorChange","getBackground","getQuote","checkChange","ownAuthor","saveAsImg","imageChange","imageInput","React","createRef","handleAbsentImage","link","_this2","linkToUnsplash","undefined","fetch","then","response","setState","url","catch","err","_this3","cache","ok","Error","json","data","quotes","content","replace","title","error","console","log","componentDidMount","e","target","value","checked","name","preventDefault","current","html2canvas","document","getElementById","useCORS","canvas","imgData","toDataURL","saveAs","render","styles","color","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","className","id","style","src","onError","alt","dangerouslySetInnerHTML","__html","htmlFor","type","onChange","min","max","step","onClick","defaultChecked","ref","Component"],"mappings":"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","file":"component---src-pages-index-js-0e06a8739988c281126e.js","sourcesContent":["import React, { Component } from \"react\";\n// import FontPicker from \"font-picker-react\";\nimport html2canvas from \"html2canvas\";\nimport { saveAs } from 'file-saver';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        // this.textInput = React.createRef();\n        this.state = {\n            quote: \"Interesting things never happen to me. I happen to them.\",\n            author: \"Bernard Shaw\",\n            quoteImage: \"\",\n            activeFont: \"Abel\",\n            borderColor: \"#e66465\",\n            opacity: 0.4,\n            textColor: \"#000000\",\n            ownQuote: \"\",\n            ownQuoteChecked: false,\n            selfAuthored: \"\",\n            ownImage: false,\n            imageURLIncorrect: false\n        };\n        this.colorChange = this.colorChange.bind(this);\n        this.opacityChange = this.opacityChange.bind(this);\n        this.textColorChange = this.textColorChange.bind(this);\n        this.getBackground = this.getBackground.bind(this);\n        this.getQuote = this.getQuote.bind(this);\n        this.checkChange = this.checkChange.bind(this);\n        this.ownQuote = this.ownQuote.bind(this);\n        this.ownAuthor = this.ownAuthor.bind(this);\n        this.saveAsImg = this.saveAsImg.bind(this);\n        this.imageChange = this.imageChange.bind(this);\n        this.imageInput = React.createRef();\n        this.handleAbsentImage = this.handleAbsentImage.bind(this);\n    }\n    getBackground(link) {\n        // debugger\n        let linkToUnsplash = \"\";\n        if (link === undefined) {\n            linkToUnsplash = \"https://source.unsplash.com/collection/143203/\";\n        } else {\n            linkToUnsplash = link;\n        }\n        fetch(linkToUnsplash)\n            .then(response => {\n                // console.log(response);\n                this.setState({\n                    quoteImage: response.url,\n                    imageURLIncorrect: false\n                });\n            })\n            .catch(err => {\n                // debugger;\n                this.setState({\n                    imageURLIncorrect: true\n                });\n            });\n    }\n    getQuote() {\n        fetch(\n            \"https://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1&callback=\",\n            { cache: \"no-store\" }\n        )\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(\"Bad response\");\n                }\n                return response.json();\n            })\n            .then(data => {\n                // debugger;\n                // console.log(data);\n                let quotes = data[0].content\n                    .replace(\"<p>\", \"\")\n                    .replace(\"</p>\", \"\");\n                this.setState({\n                    quote: quotes,\n                    author: data[0].title\n                });\n            })\n            .catch(error => console.log(\"failed to fetch\", error));\n    }\n    componentDidMount() {\n        this.getQuote();\n        this.getBackground();\n        // console.log(this.state)\n    }\n    colorChange(e) {\n        this.setState({\n            borderColor: e.target.value\n        });\n        // console.log(e.target.value);\n    }\n    opacityChange(e) {\n        this.setState({\n            opacity: e.target.value\n        });\n        // console.log(e.target.value);\n    }\n    textColorChange(e) {\n        this.setState({\n            textColor: e.target.value\n        });\n    }\n    ownQuote(e) {\n        this.setState({\n            ownQuote: e.target.value\n        });\n    }\n\n    ownAuthor(e) {\n        this.setState({\n            selfAuthored: e.target.value\n        });\n    }\n    checkChange(e) {\n        // debugger;\n        // console.log(e.target.name);\n        if (e.target.checked) {\n            if (e.target.name === \"check-own\") {\n                this.setState({\n                    ownQuoteChecked: true\n                });\n            } else {\n                this.setState({\n                    ownImage: true\n                });\n            }\n        } else {\n            if (e.target.name === \"check-own\") {\n                this.setState({\n                    ownQuoteChecked: false\n                });\n            } else {\n                this.setState({\n                    ownImage: false\n                });\n            }\n        }\n    }\n    imageChange(e) {\n        e.preventDefault();\n        // this.setState({\n        //     this\n        // })\n        this.getBackground(this.imageInput.current.value);\n    }\n    saveAsImg() {\n        // const inp = document.getElementById(\"quotes-container\")\n        // domtoimage.toPng(inp).then(function (dataUrl){\n        //     var img = new Image()\n        //     img.src = dataUrl\n        //     document.body.appendChild(img);\n        // })\n        // .catch(function (error) {\n        //     console.error('oops, something went wrong!', error);\n        // });\n        html2canvas(document.getElementById(\"quotes-container\"), {\n            useCORS: true\n        }).then(function(canvas) {\n            // console.log(canvas)\n            let imgData = canvas.toDataURL('image/png');\n            saveAs(imgData, \"Image.png\"); \n        });\n    }\n    handleAbsentImage() {\n        // debugger;\n        this.setState({\n            imageURLIncorrect: true\n        });\n        this.getBackground();\n    }\n    render() {\n        const styles = {\n            borderColor: this.state.borderColor,\n            // opacity: this.state.opacity,\n            color: this.state.textColor\n        };\n\n        return (\n            // <div>\n            //     <p>What a world.</p>\n            //     <Button>Hey</Button>\n            <div className=\"container\">\n                <div\n                    className=\"quotes-container apply-font\"\n                    id=\"quotes-container\"\n                    style={styles}\n                >\n                    <img\n                        src={this.state.quoteImage}\n                        className=\"quotes-image\"\n                        style={{ opacity: this.state.opacity }}\n                        onError={this.handleAbsentImage}\n                        alt = \"Quote\"\n                    />\n                    <div className=\"quotes-full\">\n                        {this.state.ownQuoteChecked ? (\n                            <div className=\"quotes-text\">\n                                {this.state.ownQuote}\n                            </div>\n                        ) : (\n                            <div\n                                className=\"quotes-text\"\n                                dangerouslySetInnerHTML={{\n                                    __html: this.state.quote\n                                }}\n                            />\n                        )\n                        // <div className=\"quotes-author\">{this.state.author}</div>\n                        }\n                        <div className=\"quotes-author\">\n                            {this.state.ownQuoteChecked\n                                ? this.state.selfAuthored\n                                : this.state.author}\n                        </div>\n                    </div>\n                </div>\n                {/* {this.state.ownQuoteChecked && <span>{this.state.ownQuote}</span>} */}\n                <div className=\"controls\">\n                    <label htmlFor=\"borderColor\">Border Color</label>\n                    <input\n                        type=\"color\"\n                        id=\"borderColor\"\n                        name=\"borderColor\"\n                        value={this.state.borderColor}\n                        onChange={this.colorChange}\n                    />\n\n                    <label htmlFor=\"opacity\">Opacity</label>\n                    <input\n                        type=\"range\"\n                        id=\"opacity\"\n                        name=\"opacity\"\n                        min=\"0.1\"\n                        max=\"1\"\n                        step=\"0.1\"\n                        value={this.state.opacity}\n                        onChange={this.opacityChange}\n                    />\n\n                    <label htmlFor=\"textColor\">Text Color</label>\n                    <input\n                        type=\"color\"\n                        id=\"textColor\"\n                        name=\"textColor\"\n                        value={this.state.textColor}\n                        onChange={this.textColorChange}\n                    />\n\n                    <button\n                        onClick={this.getQuote}\n                        className=\"button-style get-quote\"\n                    >\n                        Get Another Quote\n                    </button>\n                    <button\n                        onClick={this.getBackground}\n                        className=\"button-style get-background\"\n                    >\n                        Get Another Background Image\n                    </button>\n                    {/* <FontPicker\n                        apiKey=\"AIzaSyDPVlevuL5i46RR4rfrk26B-hPVDuSOam0\"\n                        activeFont={this.state.activeFont}\n                        className=\"font-picker\"\n                        onChange={nextFont =>\n                            this.setState({ activeFont: nextFont.family })\n                        }\n                    /> */}\n                    <label htmlFor=\"check-own\">Customize the quote?</label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"check-own\"\n                        id=\"check-own\"\n                        defaultChecked={false}\n                        onChange={this.checkChange}\n                    />\n                    {this.state.ownQuoteChecked && (\n                        <div className=\"own-quote\">\n                            <label htmlFor=\"ownQuote\">\n                                Enter your own Quote\n                            </label>\n                            <textarea\n                                // type=\"textarea\"\n                                // id=\"ownQuote\"\n                                // name=\"ownQuote\"\n                                value={this.state.ownQuote}\n                                onChange={this.ownQuote}\n                            />\n                            <label htmlFor=\"ownQuote\">\n                                Enter the Author's Name:\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"ownAuthor\"\n                                name=\"ownAuthor\"\n                                onChange={this.ownAuthor}\n                            />\n                        </div>\n                    )}\n                    {/* <button onClick = {this.typeQuote} className =\"type-quote\">Get Another Quote</button> */}\n                    <label htmlFor=\"check-image\">Customize the Image?</label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"check-image\"\n                        id=\"check-image\"\n                        defaultChecked={false}\n                        onChange={this.checkChange}\n                    />\n                    {this.state.ownImage && (\n                        <div className=\"own-quote\">\n                            <label htmlFor=\"image-change\">\n                                Enter the image URL\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"image-change\"\n                                name=\"image-change\"\n                                ref={this.imageInput}\n                                // value={this.state.imageChange}\n                                // onChange={this.imageChange}\n                            />\n                            <button\n                                onClick={this.imageChange}\n                                className=\"button-style image-change\"\n                            >\n                                Add Image to the quote\n                            </button>\n                            {this.state.imageURLIncorrect && (\n                                <div className=\"image-fetch-error\">\n                                    The image URL that you entered was\n                                    incorrect. Please try again.\n                                </div>\n                            )}\n                        </div>\n                    )}\n                    <button\n                        onClick={this.saveAsImg}\n                        className=\"button-style save-as-img\"\n                    >\n                        Save as an Image\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"],"sourceRoot":""}